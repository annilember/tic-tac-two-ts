var R=Object.defineProperty;var W=(r,e,t)=>e in r?R(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var s=(r,e,t)=>W(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();const H="Tic-Tac-Two",$="GAME OVER",q="Choose game mode to start playing",B=": Human, make your move.",X="O: AI is thinking...",V="Reset Game",N="RULES",D="The game is similar to tic-tac-toe, but has a few modifications. Each player has 4 pieces. X starts. Play with a friend or against AI.",z="TURN",U="After both players have placed 2 pieces, additional move options become available:",F="1. Player places a piece on the board.",J="2. Player can move their existing piece to another spot on the board (click on the piece you want to move + click on the new spot).",Y="3. Player can move the grid one spot in any direction on the game board (use arrow keys + press enter to lock new position).",j="WINNING",K="The goal is to get 3 pieces in a row inside the grid! The player who achieves this first, wins.",Q="&copy; 2025 @annilember. All rights reserved.";var g=(r=>(r.X="X",r.O="O",r.SpaceHolder="S",r.Empty="",r))(g||{}),l=(r=>(r.X="X",r.O="O",r))(l||{}),y=(r=>(r.hVsH="Human vs Human",r.hVsAi="Human vs AI",r))(y||{});function c(r,e,t){let n=document.createElement(r);return n.innerHTML=e,t&&n.classList.add(t),n}function I(r,e){let t=c("button",e,"game-mode-button");return t.addEventListener("click",()=>{r(e)}),t}function E(r){let e=document.createElement("h4");return e.classList.add(r),e}function Z(){let r=document.createElement("span");return r.classList.add("spinner"),r}function ee(r){let e=document.createElement("div");e.classList.add("choose-game-mode");let t=c("h3",q);e.appendChild(t);let n=document.createElement("div"),i=I(r,y.hVsH);n.appendChild(i);let o=I(r,y.hVsAi);return n.appendChild(o),e.appendChild(n),e}function te(r){let e=document.createElement("div");e.classList.add("info");let t=document.createElement("div");t.classList.add("whos-turn");let n=E("humans-turn"),i=c("span",r,"current-player");n.append(i),n.append(B);let o=E("ais-turn");o.append(X);let a=Z();return o.appendChild(a),t.appendChild(n),t.appendChild(o),e.appendChild(t),e}function ie(){let r=c("button",V);return r.addEventListener("click",()=>{location.reload()}),r}function re(){let r=document.createElement("div");r.classList.add("rules-container");let e=document.createElement("h2");e.innerHTML=N;let t=document.createElement("div"),n=c("p",D);t.append(n);let i=c("h3",z);t.append(i);let o=c("p",F);t.append(o);let a=c("p",U);t.append(a);let h=c("p",J);t.append(h);let v=c("p",Y);t.append(v);let A=c("h3",j);t.append(A);let L=c("p",K);return t.append(L),r.appendChild(e),r.appendChild(t),r}function ne(r,e,t){console.log("UI: getBoard is running!");let n=document.createElement("div");n.classList.add("board");for(let i=0;i<5;i++){let o=document.createElement("div");o.classList.add("row");for(let a=0;a<5;a++){let h=document.createElement("div");h.classList.add("cell"),h.id=`cell-${a}-${i}`,e[a][i]===!0&&h.classList.add("grid"),h.addEventListener("click",()=>{t(a,i)}),h.innerHTML=r[a][i]||"",o.appendChild(h)}n.appendChild(o)}return console.log("UI: Board elements loaded to DOM!"),n}function M(r,e){console.log("updating cell");const t=document.querySelector(`#cell-${e.x}-${e.y}`);if(!t)throw new Error(`Required element '${`#cell-${e.x}-${e.y}`}' not found.`);t.innerHTML=r[e.x][e.y]||""}function S(r,e){for(let t=0;t<5;t++)for(let n=0;n<5;n++){const i=document.querySelector(`#cell-${n}-${t}`);if(!i)throw new Error(`Required element '${`#cell-${n}-${t}`}' not found.`);r[n][t]===!0?i.classList.add("grid"):i.classList.remove("grid"),e&&e[n][t]===!0?i.classList.add("movable-grid"):i.classList.remove("movable-grid")}}function oe(r){console.log(r),r.coordinates.forEach(e=>{let t=document.querySelector(`#cell-${e.x}-${e.y}`);if(!t)throw new Error(`Required element '${`#cell-${e.x}-${e.y}`}' not found.`);t.classList.add("winning-cell")})}function ae(){return c("h1",H)}function se(){return c("h1",$,"game-over-text")}function de(){return c("p",Q,"footer-text")}function u(r){return JSON.parse(JSON.stringify(r))}function f(r){return JSON.parse(JSON.stringify(r))}function P(r){return{player:r,strikeCount:0,won:!1,tie:!1,coordinates:[{x:null,y:null},{x:null,y:null},{x:null,y:null}]}}function m(r){return Number.isFinite(r.x)&&Number.isFinite(r.y)}class O{constructor(e,t){this.board=e,this.grid=t}setStrikeMiddleCoordinate(e){return!m(e.coordinates[0])||!m(e.coordinates[2])||(e.coordinates[1].x=(e.coordinates[0].x+e.coordinates[2].x)/2,e.coordinates[1].y=(e.coordinates[0].y+e.coordinates[2].y)/2),e}countRowOrColumnStrike(e,t){if(!m(t))throw new Error(`Coordinates not set: ${t}`);return this.grid[t.x][t.y]&&this.board[t.x][t.y]===e.player?e.strikeCount++:e.strikeCount=0,e.strikeCount===3&&(e.won=!0,e.coordinates[2].x=t.x,e.coordinates[2].y=t.y),this.setStrikeMiddleCoordinate(e)}checkDiagonalStreaks(e,t,n){let i=P(e);for(;;)try{if(!m(t))throw new Error(`Coordinates not set: ${t}`);if(i.strikeCount===0&&(i.coordinates[0].x=t.x,i.coordinates[0].y=t.y),this.grid[t.x][t.y]&&this.board[t.x][t.y]===i.player&&i.strikeCount++,i.strikeCount===3)return i.won=!0,i.coordinates[2].x=t.x,i.coordinates[2].y=t.y,this.setStrikeMiddleCoordinate(i);t.x++,t.y=n(t.y)}catch{return this.setStrikeMiddleCoordinate(i)}}checkIfWon(e){for(let t=0;t<5;t++){let n=P(e);n.coordinates[0].x=t;let i=P(e);i.coordinates[0].y=t;for(let o=0;o<5;o++){n.strikeCount===0&&(n.coordinates[0].y=o),i.strikeCount===0&&(i.coordinates[0].x=o),n=this.countRowOrColumnStrike(n,{x:t,y:o}),i=this.countRowOrColumnStrike(i,{x:o,y:t});let a=this.checkDiagonalStreaks(e,{x:t,y:o},v=>v+1),h=this.checkDiagonalStreaks(e,{x:t,y:o},v=>v-1);if(n.won)return n;if(i.won)return i;if(a.won)return a;if(h.won)return h}}return P(e)}}class w{constructor(e){s(this,"_originalStartPoint",{x:null,y:null});s(this,"_gridStartPoint",{x:null,y:null});s(this,"_moveWasMade",!1);this._grid=e;for(let t=0;t<5;t++)for(let n=0;n<5;n++)if(this._grid[t][n]){this._originalStartPoint={x:t,y:n},this._gridStartPoint={x:t,y:n};return}}updateGrid(){if(!m(this._gridStartPoint))throw new Error(`Grid start coordinates not valid: ${this._gridStartPoint}`);const e=this._gridStartPoint.x,t=this._gridStartPoint.y,n=e+2,i=t+2;for(let o=0;o<5;o++)for(let a=0;a<5;a++)o>=e&&o<=n&&a>=t&&a<=i?this._grid[o][a]=!0:this._grid[o][a]=!1}moveGrid(e){if(!m(this._gridStartPoint)||!m(this._originalStartPoint))throw new Error(`Coordinates not valid. Grid start: ${this._gridStartPoint}, Original: ${this._originalStartPoint}`);switch(e.key){case"ArrowUp":this._gridStartPoint.x=Math.max(Math.max(this._gridStartPoint.x-1,this._originalStartPoint.x-1),0);break;case"ArrowDown":this._gridStartPoint.x=Math.min(Math.min(this._gridStartPoint.x+1,this._originalStartPoint.x+1),2);break;case"ArrowLeft":this._gridStartPoint.y=Math.max(Math.max(this._gridStartPoint.y-1,this._originalStartPoint.y-1),0);break;case"ArrowRight":this._gridStartPoint.y=Math.min(Math.min(this._gridStartPoint.y+1,this._originalStartPoint.y+1),2);break;case"Enter":this.gridWasMoved&&(this._moveWasMade=!0);break}this.updateGrid()}moveGridByPosition(e){if(!m(this._originalStartPoint))throw new Error(`Original coordinates not valid: ${this._originalStartPoint}`);return e===4||(this._gridStartPoint=this._originalStartPoint,e<3&&(this._gridStartPoint.x=this._originalStartPoint.x-1),e>5&&(this._gridStartPoint.x=this._originalStartPoint.x+1),e%3===0&&(this._gridStartPoint.y=this._originalStartPoint.y-1),(e-2)%3===0&&(this._gridStartPoint.y=this._originalStartPoint.y+1),this._gridStartPoint.x<0||this._gridStartPoint.y<0||this._gridStartPoint.x+2>4||this._gridStartPoint.y+2>4)?!1:(this.updateGrid(),!0)}get grid(){return f(this._grid)}get gridWasMoved(){return this._originalStartPoint.x!==this._gridStartPoint.x||this._originalStartPoint.y!==this._gridStartPoint.y}get moveWasMade(){return this._moveWasMade}}class le{constructor(e){s(this,"_boardState",[[],[],[],[],[]]);s(this,"_gridState",[[],[],[],[],[]]);s(this,"_movedPiece",!1);s(this,"_movedGrid",!1);s(this,"_played",{x:null,y:null});s(this,"_removed",{x:null,y:null});this._aiGamePiece=e}getRandomIndex(e=5){return Math.floor(Math.random()*e)}checkIfWon(e,t,n){return new O(e,t).checkIfWon(n).won}placePieceRandomly(e=u(this._boardState)){do if(this._played.x=this.getRandomIndex(),this._played.y=this.getRandomIndex(),!e[this._played.x][this._played.y])return this._boardState[this._played.x][this._played.y]=this._aiGamePiece,!0;while(!0)}moveRandomPiece(){let e=u(this._boardState);const t=this.getRandomIndex(4);let n=0;for(let i=0;i<5;i++)for(let o=0;o<5;o++){if(e[i][o]===this._aiGamePiece&&n===t)return e[i][o]=g.SpaceHolder,this.placePieceRandomly(e),this._movedPiece=!0,this._boardState[i][o]=g.Empty,this._removed.x=i,this._removed.y=o,!0;e[i][o]===this._aiGamePiece&&n++}return!1}moveGridRandomly(){do{let e=this.getRandomIndex(9),t=f(this._gridState),n=new w(t);if(n.moveGridByPosition(e))return this._movedGrid=!0,this._gridState=f(n.grid),!0}while(!0)}placePieceCheckIfWon(e,t=u(this._boardState)){let n=u(t);for(let i=0;i<5;i++)for(let o=0;o<5;o++){if(!n[i][o]&&(n[i][o]=e,this.checkIfWon(n,this._gridState,e)))return this._played={x:i,y:o},this._boardState[i][o]=this._aiGamePiece,!0;n=u(t)}return!1}movePieceCheckIfWon(e){let t=u(this._boardState);for(let n=0;n<5;n++)for(let i=0;i<5;i++){if(t[n][i]===this._aiGamePiece&&(t[n][i]=g.SpaceHolder,this.placePieceCheckIfWon(e,t)))return this._movedPiece=!0,this._boardState[n][i]=g.Empty,this._removed={x:n,y:i},!0;t=u(this._boardState)}return!1}moveGridCheckIfWon(e){let t=u(this._boardState);for(let n=0;n<9;n++){let i=f(this._gridState),o=new w(i);if(o.moveGridByPosition(n)&&this.checkIfWon(t,o.grid,e))return this._movedGrid=!0,this._gridState=f(o.grid),!0}return!1}makeAMove(e,t,n){if(this._boardState=e,this._gridState=t,this._movedPiece=!1,this._movedGrid=!1,n>0){if(!this.placePieceCheckIfWon(l.O)&&!this.placePieceCheckIfWon(l.X))return this.placePieceRandomly()}else if(n<3&&!this.movePieceCheckIfWon(l.O)&&!this.moveGridCheckIfWon(l.O)&&!this.movePieceCheckIfWon(l.X)){let i=this.getRandomIndex(2),o;return i?o=this.moveRandomPiece():o=this.moveGridRandomly(),o}return!0}get board(){return u(this._boardState)}get grid(){return f(this._gridState)}get played(){return this._played}get removed(){return this._removed}get placedPiece(){return!this._movedPiece}get movedGrid(){return this._movedGrid}}class ce{constructor(){s(this,"currentPlayer",l.X);s(this,"_aiMadeAMove",!1);s(this,"_gameOver",!1);s(this,"_xPieces",4);s(this,"_oPieces",4);s(this,"_board",[[],[],[],[],[]]);s(this,"_grid",[[],[],[],[],[]]);s(this,"_movableGrid",[[],[],[],[],[]]);s(this,"_isMovingGrid",!1);s(this,"_isMovingPiece",!1);s(this,"_gameMode");s(this,"_ai");s(this,"_gridMover");this.initializeGrid()}initializeGrid(){for(let e=0;e<5;e++)for(let t=0;t<5;t++)e>0&&t>0&&e<4&&t<4?this._grid[e][t]=!0:this._grid[e][t]=!1}canMovePiece(){return this._xPieces<3&&this._oPieces<3&&!this.currentPlayerIsAi()}canMoveGrid(){return this.canMovePiece()&&!this._isMovingPiece}currentPlayerIsAi(){return this._gameMode===y.hVsAi&&this.currentPlayer===l.O}switchTurn(){this.currentPlayer=this.currentPlayer===l.X?l.O:l.X}aiTurn(){if(!this._ai)throw new Error("AI not initialized.");let e=this._ai.makeAMove(this.board,this.grid,this._oPieces);if(this.switchTurn(),e)this.canMoveGrid()&&this._ai.movedGrid?(console.log("AI moved grid"),this._grid=this._ai.grid):this.canMovePiece()&&!this._ai.placedPiece?(console.log("AI moved piece"),this._board=this._ai.board):this._oPieces>0&&this._ai.placedPiece&&(console.log("AI placed piece"),this._board=this._ai.board,this._oPieces--);else{console.log("AI did not move");return}this._aiMadeAMove=!0,console.log("AI completed a move, result: ",this._board,this._grid),this.checkIfGameOverAndGetWinner()}checkIfGameOverAndGetWinner(){console.log("Game: checking for winner!");let e=new O(this._board,this._grid),t=e.checkIfWon(l.X),n=e.checkIfWon(l.O);return t.won&&n.won?(console.log("Game: It's a tie!"),t.tie=!0,this._gameOver=!0,t):(t.won?(console.log("Game: X won!"),this._gameOver=!0):n.won&&(console.log("Game: O won!"),this._gameOver=!0),t.won?t:n)}setGameMode(e){if(this._gameMode=e,!this._gameMode)throw new RangeError(`Invalid game mode: ${e}`);this._gameMode===y.hVsAi&&(this._ai=new le(l.O))}makeAMove(e,t){this._isMovingGrid=!1,!this.currentPlayerIsAi()&&(this._board[e][t]===void 0||this._board[e][t]===null||this._board[e][t]===g.Empty?(this.currentPlayer===l.X&&this._xPieces>0?(this._board[e][t]=this.currentPlayer,this._xPieces--,this.switchTurn()):this.currentPlayer===l.O&&this._oPieces>0&&(this._board[e][t]=this.currentPlayer,this._oPieces--,this.switchTurn()),this._isMovingPiece&&(this._isMovingPiece=!1)):this.canMovePiece()&&this._board[e][t]===l.X&&this.currentPlayer===l.X?(this._board[e][t]=g.Empty,this._xPieces++,this._isMovingPiece=!0):this.canMovePiece()&&this._board[e][t]===l.O&&this.currentPlayer===l.O&&(this._board[e][t]=g.Empty,this._oPieces++,this._isMovingPiece=!0),this.checkIfGameOverAndGetWinner(),!this.gameOver&&this.currentPlayerIsAi()&&this.aiTurn())}moveGrid(e){if(this.canMoveGrid()){if(this._isMovingGrid||(this._gridMover=new w(this.grid),this._isMovingGrid=!0),!this._gridMover)throw new Error("GridMover not initialized.");this._gridMover.moveGrid(e),this._gridMover.moveWasMade?(console.log("Game: fixing new grid position."),this._grid=this._gridMover.grid,this.switchTurn(),this._isMovingGrid=!1):this._gridMover.gridWasMoved?(console.log("Game: fixing new movable grid position."),this._movableGrid=this._gridMover.grid):(console.log("Game: cancelled grid move."),this._isMovingGrid=!1),this.checkIfGameOverAndGetWinner(),!this.gameOver&&this.currentPlayerIsAi()&&this.aiTurn()}}get board(){return u(this._board)}get grid(){return f(this._grid)}get movableGrid(){return this._isMovingGrid?f(this._movableGrid):!1}get gameOver(){return this._gameOver}get winner(){return this.checkIfGameOverAndGetWinner()}get aiMadeAMove(){let e=this._aiMadeAMove;return this._aiMadeAMove=!1,e}get aiMoveInfo(){if(!this._ai)throw new Error("AI not initialized.");return{played:this._ai.played,removed:this._ai.removed,movedGrid:this._ai.movedGrid}}}class he{constructor(){s(this,"timerElement");s(this,"intervalId");this.timerElement=document.createElement("h3"),this.timerElement.classList.add("timer")}start(){this.timerElement.innerHTML="0s";let e=0;this.intervalId=setInterval(()=>{e++;let t=Math.floor(e/3600),n=Math.floor(e%3600/60),i=e%3600%60,o=e>=3600?`${t}h `:"";o+=e>=60?`${n}min ${i}s`:`${i}s`,this.timerElement.innerHTML=o},1e3)}stop(){this.intervalId!==void 0&&clearInterval(this.intervalId)}get element(){return this.timerElement}}console.log("app.js is running!");let p=document.getElementById("app");if(!p)throw new Error("Required element 'app' not found.");p.classList.add("content");let ue=ae();p.appendChild(ue);let d=new ce,x=new he;p.appendChild(x.element);function me(r){k.style.display="none",d.setGameMode(r),x.start(),_.style.display="block"}let k=ee(me);p.appendChild(k);function T(){const r=d.aiMoveInfo,e=Math.floor(Math.random()*1e3)+500,t=document.querySelector(".humans-turn");if(!t)throw new Error("Required element '.humans-turn' not found.");t instanceof HTMLElement&&(t.style.display="none");const n=document.querySelector(".ais-turn");if(!n)throw new Error("Required element '.ais-turn' not found.");n instanceof HTMLElement&&(n.style.display="block"),setTimeout(()=>{r.movedGrid?S(d.grid,d.movableGrid):m(r.removed)&&M(d.board,r.removed),M(d.board,r.played),t instanceof HTMLElement&&(t.style.display="block"),n instanceof HTMLElement&&(n.style.display="none"),G(),b()},e)}function G(){let r=document.querySelector(".current-player");if(!r)throw new Error("Required element '.current-player' not found.");r.textContent=d.currentPlayer}function b(){if(d.gameOver){x.stop();let r=document.querySelector(".info");if(!r)throw new Error("Required element '.info' not found.");let e=document.querySelector(".whos-turn");e instanceof HTMLElement&&(e.style.display="none"),oe(d.winner);let t=se();r.appendChild(t)}}function fe(r,e){d.gameOver||(d.makeAMove(r,e),G(),M(d.board,{x:r,y:e}),S(d.grid,d.movableGrid),d.aiMadeAMove?T():b())}function ge(r){d.gameOver||(d.moveGrid(r),G(),S(d.grid,d.movableGrid),d.aiMadeAMove?T():b())}document.addEventListener("keyup",r=>{ge(r)});let _=document.createElement("div");_.classList.add("play-game");let C=document.createElement("div");C.classList.add("board-container");let pe=ne(d.board,d.grid,fe);C.appendChild(pe);_.appendChild(C);let _e=te(d.currentPlayer);_.appendChild(_e);let ve=ie();_.appendChild(ve);p.appendChild(_);let ye=re();p.appendChild(ye);let Pe=de();p.appendChild(Pe);console.log("App: Board loaded to DOM!");
